# ~/.tmux.conf
# By Tyler Mulligan. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is a good starting point but you should check out the man page for more
# configuration options if you really want to get more out of tmux
 
### Unbind existing tmux key bindings (except 0-9).
 
# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix
 
# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server
 
# screen ^C c
unbind ^C
bind ^C new-window
bind c
bind c new-window
 
# detach ^D d
unbind ^D
bind ^D detach
 
# displays *
unbind *
bind * list-clients
 
# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window
 
# title A
unbind A
bind A command-prompt "rename-window %%"
 
# other ^A
unbind ^A
bind ^A last-window
 
# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window
 
# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows
 
# quit \
unbind \
bind \ confirm-before "kill-server"
 
# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"
 
# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client
 
# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind v split-window -h
unbind '"'
bind - split-window -v
bind h split-window -v
 
# History
set -g history-limit 1000
 
# Pane
unbind o
bind C-s down-pane
 
# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I #W'
 
# Status Bar
set -g status-bg black
set -g status-fg white
set -g status-interval 1
set -g status-left '#[fg=green]#H#[default]'
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-4 /proc/loadavg)#[default] #[fg=cyan,bold]%Y-%m-%d %H:%M:%S#[default]'
 
# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity on
 
# Highlighting the active window in status bar
setw -g window-status-current-bg red
 
# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24
 
# :kB: focus up
unbind Tab
bind Tab down-pane
unbind BTab
bind BTab up-pane
 
# " windowlist -b
unbind '"'
bind '"' choose-window

# proper way to set scrolling
set -g mode-mouse on
###########################################################################
# General options

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Ring the bell if any background window rang a bell
set -g bell-action any

# Watch for activity in background windows
setw -g monitor-activity on

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
set -g xterm-keys on

###########################################################################
# General keymap

# Keep your finger on ctrl, or don't, same result
bind-key C-d detach-client
bind-key C-c new-window
bind-key C-p paste-buffer

# Redraw the client (if interrupted by wall, etc)
bind R refresh-client

# reload tmux config
unbind r
bind r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys emacs

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

###########################################################################
# Window management / navigation

# move between windows
bind-key C-h previous-window
bind-key C-l next-window

# C-\ (no prefix) to skip to last window we were in before this one
bind -n "C-\\" last-window

# C-Space (no prefix) to tab to next window
bind -n C-Space next-window

###########################################################################
# Pane management / navigation

# Horizontal splits with s or C-s
unbind s
unbind C-s
bind-key s split-window
bind-key C-s split-window

# Vertical split with v or C-v
unbind v
unbind C-v
bind-key v split-window -h
bind-key C-v split-window -h

# navigation with C-{h,j,k,l} -- NO PREFIX
# https://gist.github.com/mislav/5189704

bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'

# C-g C-k to passthrough a C-k
# C-k is consumed for pane navigation but we want it for kill-to-eol
unbind C-k
bind C-k send-key C-k

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: C-a = 0x01, C-b = 0x02, C-g = 0x06
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

###########################################################################
# Scrollback / pastebuffer

# Vim-style copy/paste
unbind [
bind y copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

###########################################################################
# Mouse mode

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

###########################################################################
# Color scheme (Solarized light)

# default statusbar colors
set-option -g status-bg colour231 #base2
set-option -g status-fg colour130 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour180 #base00
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour196 #orange
set-window-option -g window-status-current-bg default

# pane border
set-option -g pane-active-border-fg black
set-option -g pane-active-border-bg white
set-option -g pane-border-fg brightcyan
set-option -g pane-border-bg default

# message text
set-option -g message-bg colour231 #base2
set-option -g message-fg colour196 #orange

# pane number display
set-option -g display-panes-active-colour colour20 #blue
set-option -g display-panes-colour colour196 #orange

# clock
set-window-option -g clock-mode-colour colour40 #green

###########################################################################

##Append bash config
set-option -g default-command $SHELL



# This tmux statusbar config was created by tmuxline.vim
# on nie, 24 sie 2014

set -g status-bg 'colour235'
#set -g message-command-fg 'colour222'
#set -g status-justify 'left'
#set -g status-left-length '100'
#set -g status 'on'
#set -g pane-active-border-fg 'colour154'
#set -g message-bg 'colour238'
#set -g status-right-length '100'
#set -g status-right-attr 'none'
#set -g message-fg 'colour222'
#set -g message-command-bg 'colour238'
#set -g status-attr 'none'
#set -g status-utf8 'on'
#set -g pane-border-fg 'colour238'
#set -g status-left-attr 'none'
#setw -g window-status-fg 'colour121'
#setw -g window-status-attr 'none'
#setw -g window-status-activity-bg 'colour235'
#setw -g window-status-activity-attr 'none'
#setw -g window-status-activity-fg 'colour154'
#setw -g window-status-separator ''
#setw -g window-status-bg 'colour235'
#set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour235,nobold,nounderscore,noitalics]'
#set -g status-right '#[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #h '
#setw -g window-status-format '#[fg=colour121,bg=colour235] #I @#[fg=colour121,bg=colour235] #W '
#setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I @#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'

